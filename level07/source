#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void clear_stdin(){
    char c ;
    do {
        c = getchar();
        if (c == 10)
            break;   
    } while(c != 255)
    return;
}

unsigned int get_unum() {
    unsigned int i;
    fflush(stdout);
    scanf("%u", i);
    clear_stdin();
   return i;
}

int store_number(int *tab) {
    unsigned int nb = 0;
    unsigned int i = 0;
    printf(" Number: ");
    nb = get_unum();
    printf(" Index: ");
    i = get_unum();
    if ( i % 3 == 0 || (i >> 24) == 183 ) {
        puts(" *** ERROR! ***");
        puts("   This index is reserved for wil!");
        puts(" *** ERROR! ***");
        return 1;
    }
    tab[i] = nb;
    return 0;
}

int read_number(int *tab) {
    unsigned int i = 0;
    printf(" Index: ");
    i = get_unum();
    printf(" Number at data[%u] is %u\n", i, tab[i]);
   return 0;
}

int main(int argc, char **argv, char **env) {
    int ret = 0;
    char str[20];
    int i = 0;
    while(i < 20) {
        str[i] = 0;
        i++;
    }
    unsigned int tab[100] = 0;
    while (argv[i] != 0) {
        memset(argv[i], 0, strlen(argv[i]) - 1);
        i++;
    }
    i = 0;
    while (env[i] != 0) {
        memset(env[i], 0, strlen(env[i] - 1));
        i++;
    }
    puts("----------------------------------------------------\n\nWelcome to wil's crappy number storage service!   \n----------------------------------------------------\n Commands:                                     ");
    while (1) {
        printf("Input command: ");
        ret = 1;
        fgets(&str, 20, stdin);
        str[strlen(str) - 2] = 0;
        if (strncmp("store", str, 5) == 0) {
            ret = store_number(&tab);
        } else if (strncmp("read", str, 4) == 0) {
            ret = read_number(&tab);
        } else if (strncmp("quit", str, 4) == 0) {
            return 0;
        }
        if (ret != 0) {
            printf(" Failed to do %s command\n", str);
        } else {
            printf(" Completed %s command successfully\n", str);
        }
        while(i < 20) {
            str[i] = 0;
            i++;
        }
    }

   return 0;
}