#include <unistd.h>
#include <stdio.h>
#include <stdlib.h>
#include <linux/ptrace.h>

int main(void)
{
    pid_t pid = fork();
    char buffer[64];
    bzero(buffer, 32);
    int nb = 0;
    int status = 0;

    if (pid == 0)
    {
        prctl(PR_SET_PDEATHSIG, SIGHUP)
        ptrace(PTRACE_TRACEME, 0, 0, 0);
        puts("Give me some shellcode, k");
        gets(&buffer);
        return 0;
    }
    while (nb != 11)
    {
        wait(&status);
        if (status == 127)
        {
            puts("child is exiting...");
            return 0;
        }
        if (status <= 64) {// (127 + 1) << 1
            nb = ptrace(PTRACE_PEEKUSR, pid, 44, 0);
        }
    }
    puts("no exec() for you");
    kill(pid, 9);
    return 0;
}